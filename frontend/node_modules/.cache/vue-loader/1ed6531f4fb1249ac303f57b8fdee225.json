{"remainingRequest":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/src/components/Uploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/src/components/Uploader.vue","mtime":1664935197945},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB1cGxvYWRlciBmcm9tICIuLi9zZXJ2aWNlcy9VcGxvYWRlciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWRGaWxlczogdW5kZWZpbmVkLAogICAgICBmaWxlczogW10sCiAgICAgIGN1cnJlbnRGaWxlOiBmYWxzZSwKICAgICAgcHJvZ3Jlc3M6IDAsCiAgICAgIGtleVNpemU6IDEsCiAgICAgIG51bWJlck9mV29yZHM6IDUwCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2VsZWN0RmlsZSgpIHsKICAgICAgdGhpcy5zZWxlY3RlZEZpbGVzID0gdGhpcy4kcmVmcy5maWxlLmZpbGVzOwogICAgfSwKICAgIGtleVNpemVDaGFuZ2UodmFsKSB7CiAgICAgIGNvbnNvbGUudGFibGUodmFsKTsKICAgIH0sCiAgICBzdWJtaXRVcGxvYWQoKSB7CiAgICAgIHRoaXMuJHJlZnMudXBsb2FkLnN1Ym1pdCgpOwogICAgfSwKICAgIHVwbG9hZCgpIHsKICAgICAgdGhpcy5wcm9ncmVzcyA9IDA7CiAgICAgIHRoaXMuY3VycmVudEZpbGUgPSB0aGlzLnNlbGVjdGVkRmlsZXMuaXRlbSgwKTsKICAgICAgdXBsb2FkZXIKICAgICAgICAudXBsb2FkKHRoaXMuY3VycmVudEZpbGUsIGV2ZW50ID0+IHsKICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBNYXRoLnJvdW5kKCgxMDAgKiBldmVudC5sb2FkZWQpIC8gZXZlbnQudG90YWwpOwogICAgICAgIH0pCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy5tZXNzYWdlID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICAgICAgcmV0dXJuIFVwbG9hZFNlcnZpY2UuZ2V0RmlsZXMoKTsKICAgICAgICB9KQogICAgICAgIC50aGVuKGZpbGVzID0+IHsKICAgICAgICAgIHRoaXMuZmlsZUluZm9zID0gZmlsZXMuZGF0YTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLnByb2dyZXNzID0gMDsKICAgICAgICAgIHRoaXMubWVzc2FnZSA9ICJDb3VsZCBub3QgdXBsb2FkIHRoZSBmaWxlISI7CiAgICAgICAgICB0aGlzLmN1cnJlbnRGaWxlID0gdW5kZWZpbmVkOwogICAgICAgIH0pOwogICAgICB0aGlzLnNlbGVjdGVkRmlsZXMgPSB1bmRlZmluZWQ7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Uploader.vue"],"names":[],"mappings":";AAsDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Uploader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div v-if=\"currentFile\" class=\"progress\">\n      <div\n        class=\"progress-bar progress-bar-info progress-bar-striped\"\n        role=\"progressbar\"\n        :aria-valuenow=\"progress\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        :style=\"{ width: progress + '%' }\"\n      >{{ progress }}%</div>\n    </div>\n    <el-row>\n      <div class=\"title\">\n        <h1>Text Generator</h1>\n        <p>Generates a random yet syntactically</p>\n      </div>\n    </el-row>\n    <el-row>\n      <el-col :span=\"30\">\n        <el-form label-width=\"120px\">\n          <el-form-item>\n            <div>\n              Key size, decide how many words as prefix:\n              <el-input-number v-model=\"keySize\" @change=\"keySizeChange\" :min=\"1\" :max=\"6\"></el-input-number>\n            </div>\n          </el-form-item>\n\n          <el-form-item>\n            <div>\n              Word numbers, decide how many words you want to generate:\n              <el-input-number v-model=\"numberOfWords\" @change=\"keySizeChange\" :min=\"20\" :max=\"100\"></el-input-number>\n            </div>\n          </el-form-item>\n\n          <el-form-item>\n            <label>\n              text based file, file size must be smaller than 512KB !\n              <input\n                type=\"file\"\n                ref=\"file\"\n                @change=\"selectFile\"\n              />\n            </label>\n\n            <button class=\"btn btn-success\" :disabled=\"!selectedFiles\" @click=\"upload\">Upload</button>\n          </el-form-item>\n        </el-form>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport uploader from \"../services/Uploader\";\n\nexport default {\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      selectedFiles: undefined,\n      files: [],\n      currentFile: false,\n      progress: 0,\n      keySize: 1,\n      numberOfWords: 50\n    };\n  },\n  methods: {\n    selectFile() {\n      this.selectedFiles = this.$refs.file.files;\n    },\n    keySizeChange(val) {\n      console.table(val);\n    },\n    submitUpload() {\n      this.$refs.upload.submit();\n    },\n    upload() {\n      this.progress = 0;\n      this.currentFile = this.selectedFiles.item(0);\n      uploader\n        .upload(this.currentFile, event => {\n          this.progress = Math.round((100 * event.loaded) / event.total);\n        })\n        .then(response => {\n          this.message = response.data.message;\n          return UploadService.getFiles();\n        })\n        .then(files => {\n          this.fileInfos = files.data;\n        })\n        .catch(() => {\n          this.progress = 0;\n          this.message = \"Could not upload the file!\";\n          this.currentFile = undefined;\n        });\n      this.selectedFiles = undefined;\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv {\n  text-align: left;\n}\n.title {\n  text-align: center;\n}\n</style>\n"]}]}