{"remainingRequest":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/babel-loader/lib/index.js!/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/src/components/Uploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/src/components/Uploader.vue","mtime":1664935197945},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/babel.config.js","mtime":1664913886523},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zanfu/Documents/repo/iot-proj/vue-fileupload/markov-text-generator/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHVwbG9hZGVyIGZyb20gIi4uL3NlcnZpY2VzL1VwbG9hZGVyIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBtc2c6IFN0cmluZwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZEZpbGVzOiB1bmRlZmluZWQsCiAgICAgIGZpbGVzOiBbXSwKICAgICAgY3VycmVudEZpbGU6IGZhbHNlLAogICAgICBwcm9ncmVzczogMCwKICAgICAga2V5U2l6ZTogMSwKICAgICAgbnVtYmVyT2ZXb3JkczogNTAKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgc2VsZWN0RmlsZSgpIHsKICAgICAgdGhpcy5zZWxlY3RlZEZpbGVzID0gdGhpcy4kcmVmcy5maWxlLmZpbGVzOwogICAgfSwKCiAgICBrZXlTaXplQ2hhbmdlKHZhbCkgewogICAgICBjb25zb2xlLnRhYmxlKHZhbCk7CiAgICB9LAoKICAgIHN1Ym1pdFVwbG9hZCgpIHsKICAgICAgdGhpcy4kcmVmcy51cGxvYWQuc3VibWl0KCk7CiAgICB9LAoKICAgIHVwbG9hZCgpIHsKICAgICAgdGhpcy5wcm9ncmVzcyA9IDA7CiAgICAgIHRoaXMuY3VycmVudEZpbGUgPSB0aGlzLnNlbGVjdGVkRmlsZXMuaXRlbSgwKTsKICAgICAgdXBsb2FkZXIudXBsb2FkKHRoaXMuY3VycmVudEZpbGUsIGV2ZW50ID0+IHsKICAgICAgICB0aGlzLnByb2dyZXNzID0gTWF0aC5yb3VuZCgxMDAgKiBldmVudC5sb2FkZWQgLyBldmVudC50b3RhbCk7CiAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMubWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgICByZXR1cm4gVXBsb2FkU2VydmljZS5nZXRGaWxlcygpOwogICAgICB9KS50aGVuKGZpbGVzID0+IHsKICAgICAgICB0aGlzLmZpbGVJbmZvcyA9IGZpbGVzLmRhdGE7CiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLnByb2dyZXNzID0gMDsKICAgICAgICB0aGlzLm1lc3NhZ2UgPSAiQ291bGQgbm90IHVwbG9hZCB0aGUgZmlsZSEiOwogICAgICAgIHRoaXMuY3VycmVudEZpbGUgPSB1bmRlZmluZWQ7CiAgICAgIH0pOwogICAgICB0aGlzLnNlbGVjdGVkRmlsZXMgPSB1bmRlZmluZWQ7CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":"AAsDA;AAEA;EACAA;IACAC;EADA,CADA;;EAIAC;IACA;MACAC,wBADA;MAEAC,SAFA;MAGAC,kBAHA;MAIAC,WAJA;MAKAC,UALA;MAMAC;IANA;EAQA,CAbA;;EAcAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACAC;IACA,CANA;;IAOAC;MACA;IACA,CATA;;IAUAC;MACA;MACA;MACAC,SACAD,MADA,CACA,gBADA,EACAE;QACA;MACA,CAHA,EAIAC,IAJA,CAIAC;QACA;QACA;MACA,CAPA,EAQAD,IARA,CAQAb;QACA;MACA,CAVA,EAWAe,KAXA,CAWA;QACA;QACA;QACA;MACA,CAfA;MAgBA;IACA;;EA9BA;AAdA","names":["props","msg","data","selectedFiles","files","currentFile","progress","keySize","numberOfWords","methods","selectFile","keySizeChange","console","submitUpload","upload","uploader","event","then","response","catch"],"sourceRoot":"src/components","sources":["Uploader.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"currentFile\" class=\"progress\">\n      <div\n        class=\"progress-bar progress-bar-info progress-bar-striped\"\n        role=\"progressbar\"\n        :aria-valuenow=\"progress\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        :style=\"{ width: progress + '%' }\"\n      >{{ progress }}%</div>\n    </div>\n    <el-row>\n      <div class=\"title\">\n        <h1>Text Generator</h1>\n        <p>Generates a random yet syntactically</p>\n      </div>\n    </el-row>\n    <el-row>\n      <el-col :span=\"30\">\n        <el-form label-width=\"120px\">\n          <el-form-item>\n            <div>\n              Key size, decide how many words as prefix:\n              <el-input-number v-model=\"keySize\" @change=\"keySizeChange\" :min=\"1\" :max=\"6\"></el-input-number>\n            </div>\n          </el-form-item>\n\n          <el-form-item>\n            <div>\n              Word numbers, decide how many words you want to generate:\n              <el-input-number v-model=\"numberOfWords\" @change=\"keySizeChange\" :min=\"20\" :max=\"100\"></el-input-number>\n            </div>\n          </el-form-item>\n\n          <el-form-item>\n            <label>\n              text based file, file size must be smaller than 512KB !\n              <input\n                type=\"file\"\n                ref=\"file\"\n                @change=\"selectFile\"\n              />\n            </label>\n\n            <button class=\"btn btn-success\" :disabled=\"!selectedFiles\" @click=\"upload\">Upload</button>\n          </el-form-item>\n        </el-form>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport uploader from \"../services/Uploader\";\n\nexport default {\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      selectedFiles: undefined,\n      files: [],\n      currentFile: false,\n      progress: 0,\n      keySize: 1,\n      numberOfWords: 50\n    };\n  },\n  methods: {\n    selectFile() {\n      this.selectedFiles = this.$refs.file.files;\n    },\n    keySizeChange(val) {\n      console.table(val);\n    },\n    submitUpload() {\n      this.$refs.upload.submit();\n    },\n    upload() {\n      this.progress = 0;\n      this.currentFile = this.selectedFiles.item(0);\n      uploader\n        .upload(this.currentFile, event => {\n          this.progress = Math.round((100 * event.loaded) / event.total);\n        })\n        .then(response => {\n          this.message = response.data.message;\n          return UploadService.getFiles();\n        })\n        .then(files => {\n          this.fileInfos = files.data;\n        })\n        .catch(() => {\n          this.progress = 0;\n          this.message = \"Could not upload the file!\";\n          this.currentFile = undefined;\n        });\n      this.selectedFiles = undefined;\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv {\n  text-align: left;\n}\n.title {\n  text-align: center;\n}\n</style>\n"]}]}